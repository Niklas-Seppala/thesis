plugins {
    id 'java'
    id 'application'
}

apply from: 'native.gradle'
apply from: 'benchmarks.gradle'

group = 'org.nse'

repositories {
    mavenCentral()
}

tasks.register('list') {
    FileCollection compileClasspath = configurations.compileClasspath
    dependsOn compileClasspath
    doLast {
        println "classpath = ${compileClasspath.collect { File file -> file.name }}"
    }
}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources"
        }
    }
}

dependencies {
    implementation 'org.jetbrains:annotations:24.0.0'
    implementation 'net.java.dev.jna:jna-platform:5.12.1'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
    jvmArgs(['--enable-preview'])
}

jar {
    doLast {
        copy {
            from 'build/libs/'
            into 'benchmarks/libs'
        }
    }
}

processResources {
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
}

compileJava {
    options.compilerArgs += ["-h", file("native/include/windex/jni")]
}

tasks.withType(JavaCompile).each {
    it.options.compilerArgs.add('--enable-preview')
}
tasks.withType(JavaExec).configureEach {
    jvmArgs += "--enable-preview"
}

clean.dependsOn('cleanNative')
clean.dependsOn('cleanBenchmarks')
assemble.dependsOn('compileJNI')
