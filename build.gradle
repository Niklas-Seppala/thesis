plugins {
    id 'java'
}

group = 'org.ns'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains:annotations:24.0.0'
    implementation 'net.java.dev.jna:jna-platform:5.12.1'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
    jvmArgs(['--enable-preview'])
}


sourceSets {
    main {
        resources {
            srcDirs "src/main/resources", "build/native/lib"
        }
    }
}

compileJava {
    options.compilerArgs += ["-h", file("native/include/windex/jni")]
}

tasks.withType(JavaCompile).each {
    it.options.compilerArgs.add('--enable-preview')
}

tasks.register('compileJNI') {
    dependsOn compileJava

    doLast {
        exec {
            workingDir 'native'
            commandLine 'sh', '-c',  'mkdir -p ../build/libs && make && cp out/*.so ../build/libs/'
        }
    }
}

clean.doFirst {
    delete fileTree('native/include') {
        include '**/jni_*.h'
    }
}

clean.dependsOn('cleanNative')
assemble.dependsOn('compileJNI')

tasks.register('testNative', Exec) {
    workingDir 'native'
    commandLine 'make'
    args 'test'
}

tasks.register('cleanNative', Exec) {
    workingDir 'native'
    commandLine 'make'
    args 'clean'
}